version: '3.8'

services:

  # Servicio de proxy inverso para gestionar solicitudes HTTP/HTTPS
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"    # Expone el puerto 80 para HTTP
      - "443:443"  # Expone el puerto 443 para HTTPS
    volumes:
      # Directorios montados para configuración, virtual hosts, certificados y HTML estático
      - /disk4/nginx/conf:/etc/nginx/conf.d
      - /disk4/nginx/vhost.d:/etc/nginx/vhost.d
      - /disk4/nginx/html:/usr/share/nginx/html
      - /disk4/nginx/certs:/etc/nginx/certs:ro # Certificados en modo solo lectura
      - /var/run/docker.sock:/tmp/docker.sock:ro # Acceso al socket de Docker para auto-configuración de hosts
    networks:
      - web  # Red común para interconectar servicios

  # Servicio de companion para gestionar certificados SSL con Let's Encrypt
  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    restart: unless-stopped
    environment:
      - DEFAULT_EMAIL=soporteti@amass.com.co  # Correo electrónico para registro en Let's Encrypt
    volumes_from:
      - nginx-proxy  # Utiliza los mismos volúmenes del proxy para sincronizar certificados y configuraciones
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Acceso al socket de Docker
      - /disk4/nginx/certs:/etc/nginx/certs:rw # Certificados con permisos de escritura
      - /disk4/nginx/vhost.d:/etc/nginx/vhost.d # Configuración de hosts virtuales
      - /disk4/nginx/html:/usr/share/nginx/html # Archivos HTML estáticos
      - /disk4/nginx/acme:/etc/acme.sh # Directorio para ACME.sh
    networks:
      - web  # Conectado a la misma red que nginx-proxy

  # Base de datos MongoDB para el servicio AMAS
  database:
    image: mongo:7.0.2
    restart: always
    ports:
      - 127.0.0.1:27017:27017  # Puerto local para acceder a MongoDB
    volumes:
      - /disk4/amas/database:/data/db  # Persistencia de datos en el host
    environment:
      - MONGO_INITDB_ROOT_USERNAME=amasMaster  # Usuario administrador inicial
      - MONGO_INITDB_ROOT_PASSWORD=*AmAsMaStErFiRst1  # Contraseña del usuario administrador
    command: --auth  # Habilitar autenticación en MongoDB
    networks:
      - web  # Conectado a la red web

  # Backend del sistema AMAS
  amasbackend:
    image: amasbackend
    restart: on-failure:10  # Reiniciar hasta 10 veces en caso de fallo
    build: .  # Construir desde el Dockerfile en el contexto actual
    command: node ./dist/index.js  # Comando para ejecutar el backend
    expose:
      - "3500"  # Exponer el puerto 3500 para acceso interno
    environment:
      - VIRTUAL_HOST=amass.com.co  # Host virtual para nginx-proxy
      - LETSENCRYPT_HOST=amass.com.co  # Dominio para el certificado SSL
      - LETSENCRYPT_EMAIL=soporteti@amass.com.co  # Correo para el certificado SSL
      - VIRTUAL_PORT=3500  # Puerto interno del backend
      - VIRTUAL_PATH=/api  # Ruta donde el backend será accesible
    volumes:
      # Directorios montados para almacenamiento de imágenes, PDFs, scripts, etc.
      - /disk4/amas/imagesProducts:/home/imagesProducts
      - /disk4/amas/imagesMarks:/home/imagesMarks
      - /disk4/amas/imagesCategories:/home/imagesCategories
      - /disk4/amas/supportsPayments:/home/supportsPayments
      - /disk4/amas/pdfQuotes:/home/pdfQuotes
      - /disk4/amas/pdfOrder:/home/pdfOrder
      - /disk4/amas/files:/home/files
      - /disk4/amas/temp:/home/temp
      - /disk4/amas/scripts/pythonScripts:/home/scripts/pythonScripts
    depends_on:
      - database  # Espera a que la base de datos esté lista antes de iniciar
    networks:
      - web  # Conectado a la red web

  # Frontend del sistema AMAS (versión no-SSR)
  amasfront:
    image: amasfront
    build: /disk1/amas/amasFrontendPlatform # Se mantiene la ruta de compilación original
    restart: always
    expose:
      - "8080"
    environment:
      - VIRTUAL_HOST=legacy.amass.com.co  # NUEVO HOST VIRTUAL para evitar conflicto
      - LETSENCRYPT_HOST=legacy.amass.com.co
      - LETSENCRYPT_EMAIL=soporteti@amass.com.co
      - VIRTUAL_PORT=8080
      - VIRTUAL_PATH=/
    networks:
      - web

  # Frontend SSR del sistema AMAS (este es el nuevo servicio)
  amasfrontendssr:
    image: amas-frontend-ssr # Nombre de la imagen que creaste con podman
    build: /disk1/amas/amasFrontendSsr
    restart: always
    expose:
      - "4000"
    environment:
      - VIRTUAL_HOST=amass.com.co  # Host virtual principal
      - LETSENCRYPT_HOST=amass.com.co
      - LETSENCRYPT_EMAIL=soporteti@amass.com.co
      - VIRTUAL_PORT=4000
      - VIRTUAL_PATH=/
      - API_URL=http://amasbackend:3500
    depends_on:
      - amasbackend
    networks:
      - web

# Definición de la red web para interconectar los servicios
networks:
  web:
    external: true
